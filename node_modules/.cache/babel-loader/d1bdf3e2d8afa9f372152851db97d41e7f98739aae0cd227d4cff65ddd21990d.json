{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suhas\\\\cricket-dbms\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    if (username === 'admin' && password === 'admin') {\n      // Replace with actual authentication\n      localStorage.setItem('auth', 'true'); // Store authentication token\n      navigate('/'); // Redirect to the Match page after login\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [role, setRole] = useState('user');  // New state for role selection\n//   const navigate = useNavigate();\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     // Example of hardcoded credentials (replace with actual authentication logic)\n//     if (username === 'admin' && password === 'admin' && role === 'admin') {\n//       localStorage.setItem('auth', 'true');\n//       localStorage.setItem('role', 'admin');  // Store admin role\n//       navigate('/');  // Redirect to the Match page\n//     } else if (role === 'user') {\n//       localStorage.setItem('auth', 'true');\n//       localStorage.setItem('role', 'user');  // Store user role\n//       navigate('/');  // Redirect to the Match page\n//     } else {\n//       alert('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div className=\"form-group\">\n//           <label>Username</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//             placeholder=\"Enter 'admin' for Admin login\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//             placeholder=\"Enter 'admin' for Admin login\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Select Role</label>\n//           <select\n//             className=\"form-control\"\n//             value={role}\n//             onChange={(e) => setRole(e.target.value)}\n//           >\n//             <option value=\"user\">User</option>\n//             <option value=\"admin\">Admin</option>\n//           </select>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","localStorage","setItem","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/suhas/cricket-dbms/src/pages/Login.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (username === 'admin' && password === 'admin') { // Replace with actual authentication\r\n      localStorage.setItem('auth', 'true'); // Store authentication token\r\n      navigate('/'); // Redirect to the Match page after login\r\n    } else {\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Admin Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n export default Login;\r\n\r\n \r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function Login() {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [role, setRole] = useState('user');  // New state for role selection\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Example of hardcoded credentials (replace with actual authentication logic)\r\n//     if (username === 'admin' && password === 'admin' && role === 'admin') {\r\n//       localStorage.setItem('auth', 'true');\r\n//       localStorage.setItem('role', 'admin');  // Store admin role\r\n//       navigate('/');  // Redirect to the Match page\r\n//     } else if (role === 'user') {\r\n//       localStorage.setItem('auth', 'true');\r\n//       localStorage.setItem('role', 'user');  // Store user role\r\n//       navigate('/');  // Redirect to the Match page\r\n//     } else {\r\n//       alert('Invalid credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>Login</h2>\r\n//       <form onSubmit={handleLogin}>\r\n//         <div className=\"form-group\">\r\n//           <label>Username</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={username}\r\n//             onChange={(e) => setUsername(e.target.value)}\r\n//             required\r\n//             placeholder=\"Enter 'admin' for Admin login\"\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             className=\"form-control\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//             placeholder=\"Enter 'admin' for Admin login\"\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Select Role</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             value={role}\r\n//             onChange={(e) => setRole(e.target.value)}\r\n//           >\r\n//             <option value=\"user\">User</option>\r\n//             <option value=\"admin\">Admin</option>\r\n//           </select>\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}